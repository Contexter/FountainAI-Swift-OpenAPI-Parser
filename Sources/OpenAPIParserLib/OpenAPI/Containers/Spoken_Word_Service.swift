// Auto-generated from OpenAPIYAMLContainer.swift
// This file contains the OpenAPI YAML definition for Spoken_Word_Service

import Foundation

struct Spoken_Word_Service {
    /// The OpenAPI YAML definition
    static let yaml: String = """
openapi: 3.1.0\ninfo:\n  title: Spoken Word Service\n  description: >\n    This service manages lines of spoken words within a story, allowing for intuitive retrieval based on context. Lines are grouped into speeches and can be interspersed with actions. The service supports CRUD operations on lines, which are synchronized with Typesense for searchability. You can utilize this API to reason about dialogues in your interactions with users.\n  version: 4.0.0\nservers:\n  - url: https://staging.spokenword.fountain.coach\n    description: Staging server for Spoken Word Service\npaths:\n  /lines:\n    get:\n      operationId: listLines\n      summary: Retrieve lines based on context\n      description: >\n        Fetches lines of spoken words based on context from the Story Factory API. You can filter by character, speech, section, and keywords to assist in your reasoning.\n      parameters:\n        - name: scriptId\n          in: query\n          required: true\n          schema:\n            type: integer\n          description: Unique identifier of the script.\n        - name: characterId\n          in: query\n          required: false\n          schema:\n            type: integer\n          description: Filter lines by character ID.\n        - name: speechId\n          in: query\n          required: false\n          schema:\n            type: integer\n          description: Filter lines by speech ID.\n        - name: sectionId\n          in: query\n          required: false\n          schema:\n            type: integer\n          description: Filter lines by section ID.\n        - name: actionId\n          in: query\n          required: false\n          schema:\n            type: integer\n          description: Filter lines by associated action ID.\n        - name: keyword\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Search for lines containing specific keywords or phrases.\n      security:\n        - apiKeyAuth: []\n      responses:\n        '200':\n          description: A list of spoken lines.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Line'\n        '400':\n          description: Invalid query parameters.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\n        '500':\n          description: Internal server error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\n    post:\n      operationId: createLine\n      summary: Create a new line\n      description: >\n        Creates a new line of spoken words within a speech. The line will be persisted to SQLite and synchronized with Typesense.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LineCreateRequest'\n      security:\n        - apiKeyAuth: []\n      responses:\n        '201':\n          description: Line created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineResponse'\n        '400':\n          description: Invalid input.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\n        '500':\n          description: Internal server error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\n  /lines/{lineId}:\n    get:\n      operationId: getLineById\n      summary: Retrieve a line by ID\n      description: >\n        Retrieves a specific line of spoken words using its ID, along with its assigned metadata and sequence number.\n      parameters:\n        - name: lineId\n          in: path\n          required: true\n          schema:\n            type: integer\n      security:\n        - apiKeyAuth: []\n      responses:\n        '200':\n          description: Line details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineResponse'\n        '404':\n          description: Line not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\n        '500':\n          description: Internal server error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\n    patch:\n      operationId: updateLine\n      summary: Update a line\n      description: >\n        Updates an existing line of spoken words. You can modify the line's content, and its sequence number can be reassigned via the Central Sequence Service if needed.\n      parameters:\n        - name: lineId\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LineUpdateRequest'\n      security:\n        - apiKeyAuth: []\n      responses:\n        '200':\n          description: Line updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineResponse'\n        '400':\n          description: Invalid line input.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\n        '404':\n          description: Line not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\n        '500':\n          description: Internal server error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardError'\ncomponents:\n  schemas:\n    Line:\n      type: object\n      properties:\n        lineId:\n          type: integer\n          description: Unique identifier for the line.\n        speechId:\n          type: integer\n          description: ID of the speech this line belongs to.\n        characterId:\n          type: integer\n          description: ID of the character delivering this line.\n        content:\n          type: string\n          description: The content of the line.\n        sequenceNumber:\n          type: integer\n          description: Sequence number assigned by the Central Sequence Service to maintain order.\n        comment:\n          type: string\n          description: Contextual explanation generated dynamically by the GPT model, explaining why the line was created or updated.\n    LineCreateRequest:\n      type: object\n      properties:\n        speechId:\n          type: integer\n          description: ID of the speech this line will be part of.\n        characterId:\n          type: integer\n          description: ID of the character delivering this line.\n        content:\n          type: string\n          description: Content of the line to be created.\n        comment:\n          type: string\n          description: Contextual explanation for creating the line.\n      required:\n        - speechId\n        - characterId\n        - content\n        - comment\n    LineUpdateRequest:\n      type: object\n      properties:\n        content:\n          type: string\n          description: Updated content of the line.\n        comment:\n          type: string\n          description: Contextual explanation for updating the line.\n      required:\n        - content\n        - comment\n    LineResponse:\n      type: object\n      properties:\n        lineId:\n          type: integer\n          description: Unique identifier for the line.\n        speechId:\n          type: integer\n          description: ID of the speech this line belongs to.\n        characterId:\n          type: integer\n          description: ID of the character delivering this line.\n        content:\n          type: string\n          description: The content of the line.\n        sequenceNumber:\n          type: integer\n          description: Sequence number assigned by the Central Sequence Service to maintain order.\n        comment:\n          type: string\n          description: Contextual explanation generated dynamically by the GPT model, explaining why the line was created or updated.\n    StandardError:\n      type: object\n      properties:\n        errorCode:\n          type: string\n          description: Application-specific error code.\n        message:\n          type: string\n          description: Description of the error encountered.\n        details:\n          type: string\n          description: Additional information about the error, if available.\n  securitySchemes:\n    apiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\nsecurity:\n  - apiKeyAuth: []\n
"""
}