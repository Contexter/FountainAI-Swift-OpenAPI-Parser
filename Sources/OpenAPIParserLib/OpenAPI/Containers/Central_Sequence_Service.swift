// Auto-generated from OpenAPIYAMLContainer.swift
// This file contains the OpenAPI YAML definition for Central_Sequence_Service

import Foundation

struct Central_Sequence_Service {
    /// The OpenAPI YAML definition
    static let yaml: String = """
openapi: 3.1.0\ninfo:\n  title: Central Sequence Service API\n  description: >\n    This API manages the assignment and updating of sequence numbers for various elements within a story, ensuring logical order and consistency. The service persists data to an SQLite database, which is then synchronized with Typesense for real-time search and retrieval capabilities.\n  version: 4.0.0\nservers:\n  - url: https://centralsequence.fountain.coach\n    description: Production server for Central Sequence Service API\n  - url: https://staging.centralsequence.fountain.coach\n    description: Staging server\npaths:\n  /sequence:\n    post:\n      summary: Generate Sequence Number\n      operationId: generateSequenceNumber\n      tags:\n        - Sequence Management\n      description: Generates a new sequence number for a specified element type, persists it to an SQLite database, and synchronizes it with Typesense. If synchronization with Typesense fails, a retry mechanism will be triggered automatically.\n      requestBody:\n        required: true\n        description: Details of the element requesting a sequence number.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SequenceRequest'\n      responses:\n        '201':\n          description: Sequence number successfully generated and synchronized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SequenceResponse'\n        '400':\n          description: Invalid request parameters.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '502':\n          description: Failed to synchronize with Typesense.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TypesenseErrorResponse'\n        '500':\n          description: Internal server error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /sequence/reorder:\n    put:\n      summary: Reorder Elements\n      operationId: reorderElements\n      tags:\n        - Sequence Management\n      description: Reorders elements by updating their sequence numbers, persists the changes to an SQLite database, and synchronizes the changes with Typesense. If synchronization with Typesense fails, a retry mechanism will be triggered automatically.\n      requestBody:\n        required: true\n        description: Details of the reordering request.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReorderRequest'\n      responses:\n        '200':\n          description: Elements successfully reordered and synchronized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReorderResponse'\n        '400':\n          description: Invalid request parameters.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '502':\n          description: Failed to synchronize with Typesense.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TypesenseErrorResponse'\n        '500':\n          description: Internal server error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /sequence/version:\n    post:\n      summary: Create New Version\n      operationId: createVersion\n      tags:\n        - Version Management\n      description: Creates a new version of an element, persists it to an SQLite database, and synchronizes it with Typesense. If synchronization with Typesense fails, a retry mechanism will be triggered automatically.\n      requestBody:\n        required: true\n        description: Details of the versioning request.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VersionRequest'\n      responses:\n        '201':\n          description: New version successfully created and synchronized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n        '400':\n          description: Invalid request parameters.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '502':\n          description: Failed to synchronize with Typesense.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TypesenseErrorResponse'\n        '500':\n          description: Internal server error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  schemas:\n    SequenceRequest:\n      description: Schema representing a request to generate a new sequence number\n      type: object\n      properties:\n        elementType:\n          type: string\n          description: Type of the element (e.g., script, section, character, action, spokenWord).\n          enum: [script, section, character, action, spokenWord]\n        elementId:\n          type: integer\n          description: Unique identifier of the element.\n          minimum: 1\n        comment:\n          type: string\n          description: Contextual explanation for generating the sequence number.\n      required: [elementType, elementId, comment]\n    SequenceResponse:\n      description: Schema representing the response with a generated sequence number\n      type: object\n      properties:\n        sequenceNumber:\n          type: integer\n          description: The generated sequence number.\n          minimum: 1\n        comment:\n          type: string\n          description: Contextual explanation generated dynamically by the GPT model, explaining why the sequence number was generated.\n    ReorderRequest:\n      description: Schema representing a request to reorder elements\n      type: object\n      properties:\n        elementType:\n          type: string\n          description: Type of elements being reordered.\n          enum: [script, section, character, action, spokenWord]\n        elements:\n          type: array\n          items:\n            type: object\n            properties:\n              elementId:\n                type: integer\n                description: Unique identifier of the element.\n                minimum: 1\n              newSequence:\n                type: integer\n                description: New sequence number for the element.\n                minimum: 1\n        comment:\n          type: string\n          description: Contextual explanation for reordering the elements.\n      required: [elementType, elements, comment]\n    ReorderResponse:\n      description: Schema representing the response after reordering elements\n      type: object\n      properties:\n        updatedElements:\n          type: array\n          items:\n            type: object\n            properties:\n              elementId:\n                type: integer\n                description: Unique identifier of the element.\n              newSequence:\n                type: integer\n                description: Updated sequence number.\n        comment:\n          type: string\n          description: Contextual explanation generated dynamically by the GPT model, explaining why the elements were reordered.\n    VersionRequest:\n      description: Schema representing a request to create a new version of an element\n      type: object\n      properties:\n        elementType:\n          type: string\n          description: Type of the element (e.g., script, section, character, action, spokenWord).\n          enum: [script, section, character, action, spokenWord]\n        elementId:\n          type: integer\n          description: Unique identifier of the element.\n          minimum: 1\n        newVersionData:\n          type: object\n          description: Data for the new version of the element.\n        comment:\n          type: string\n          description: Contextual explanation for creating the new version.\n      required: [elementType, elementId, newVersionData, comment]\n    VersionResponse:\n      description: Schema representing the response with the new version number\n      type: object\n      properties:\n        versionNumber:\n          type: integer\n          description: The version number of the new version.\n          minimum: 1\n        comment:\n          type: string\n          description: Contextual explanation generated dynamically by the GPT model, explaining why the new version was created.\n    SuccessResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Success message.\n    ErrorResponse:\n      type: object\n      properties:\n        errorCode:\n          type: string\n          description: Application-specific error code.\n        message:\n          type: string\n          description: Human-readable error message.\n        details:\n          type: string\n          description: Additional information about the error, if available.\n    TypesenseErrorResponse:\n      type: object\n      properties:\n        errorCode:\n          type: string\n          description: Error code related to Typesense synchronization.\n        retryAttempt:\n          type: integer\n          description: Number of retry attempts made to synchronize with Typesense.\n        message:\n          type: string\n          description: Human-readable error message.\n        details:\n          type: string\n          description: Additional information about the Typesense error, if available.\n  securitySchemes:\n    apiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\nsecurity:\n  - apiKeyAuth: []\n
"""
}