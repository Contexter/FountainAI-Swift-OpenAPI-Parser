import Foundation

let sourceDirectory = "./Sources/OpenAPIParserLib/OpenAPI"
let outputFile = "./Sources/OpenAPIParserLib/OpenAPIYAMLContainer.swift"

// Function to escape YAML content for embedding in Swift strings
func escapeYAML(_ yaml: String) -> String {
    return yaml
        .replacingOccurrences(of: "\\", with: "\\\\")
        .replacingOccurrences(of: "\"", with: "\\\"")
        .replacingOccurrences(of: "\n", with: "\\n")
}

// Read YAML files from the source directory
let fileManager = FileManager.default
guard let files = try? fileManager.contentsOfDirectory(atPath: sourceDirectory) else {
    fatalError("Failed to read YAML directory at \(sourceDirectory)")
}

var output = """
// Auto-generated by generate_yaml_classes.swift
// This file encapsulates OpenAPI YAML specifications as Swift static properties.
import Foundation

class OpenAPIYAMLContainer {
"""

for file in files where file.hasSuffix(".yml") || file.hasSuffix(".yaml") {
    let filePath = "\(sourceDirectory)/\(file)"
    guard let content = try? String(contentsOfFile: filePath, encoding: .utf8) else {
        fatalError("Failed to read \(filePath)")
    }
    
    let escapedContent = escapeYAML(content)
    let propertyName = file
        .replacingOccurrences(of: "-", with: "_")
        .replacingOccurrences(of: ".", with: "_")
        .lowercased()
    
    output += """
    
    static let \(propertyName): String = \"\"\"
    \(escapedContent)
    \"\"\"
    """
}

output += "\n}\n"

// Write to the output file
do {
    try output.write(toFile: outputFile, atomically: true, encoding: .utf8)
    print("Successfully generated \(outputFile)")
} catch {
    print("Failed to write \(outputFile): \(error)")
}
